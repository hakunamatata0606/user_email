/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.apache.logging.log4j:log4j-api:2.17.1' // Use the latest version
    implementation 'org.apache.logging.log4j:log4j-core:2.17.1'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc:3.4.4'
    implementation 'mysql:mysql-connector-java:8.0.29'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.4.4'
    implementation 'org.springframework.boot:spring-boot-starter-mail:3.4.4'
    implementation 'com.auth0:java-jwt:4.5.0'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'user_email.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-parameters"
}